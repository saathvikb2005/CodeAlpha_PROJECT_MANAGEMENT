{"ast":null,"code":"var _jsxFileName = \"D:\\\\INTERNSHIPS\\\\CODEALPHA\\\\PROJECT_MANAGEMENT\\\\frontend\\\\src\\\\pages\\\\ProjectBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport API from \"../utils/api\";\nimport \"../styles/board.css\";\nimport Navbar from \"../components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectBoard() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [project, setProject] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProject = async () => {\n      try {\n        const res = await API.get(`/projects/${id}/`);\n        setProject(res.data);\n        setTasks(res.data.tasks || []);\n      } catch (err) {\n        console.error(err);\n        alert(\"Failed to load project\");\n        navigate(\"/\");\n      }\n    };\n    fetchProject();\n  }, [id, navigate]);\n  const handleCreateTask = () => {\n    navigate(`/project/${id}/create-task`);\n  };\n  const handleTaskClick = taskId => {\n    navigate(`/task/${taskId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: project === null || project === void 0 ? void 0 : project.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: project === null || project === void 0 ? void 0 : project.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateTask,\n      className: \"create-btn\",\n      children: \"+ Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [\"TODO\", \"INPROGRESS\", \"DONE\"].map(statusKey => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: statusKey === \"TODO\" ? \"To Do\" : statusKey === \"INPROGRESS\" ? \"In Progress\" : \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), tasks.filter(t => t.status === statusKey).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          onClick: () => handleTaskClick(task.id),\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this))]\n      }, statusKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectBoard, \"Xf9iy2a8aInk8rktX2GMpXLD9KU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ProjectBoard;\nexport default ProjectBoard;\nvar _c;\n$RefreshReg$(_c, \"ProjectBoard\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","API","Navbar","jsxDEV","_jsxDEV","ProjectBoard","_s","id","project","setProject","tasks","setTasks","navigate","fetchProject","res","get","data","err","console","error","alert","handleCreateTask","handleTaskClick","taskId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","description","onClick","map","statusKey","filter","t","status","task","title","_c","$RefreshReg$"],"sources":["D:/INTERNSHIPS/CODEALPHA/PROJECT_MANAGEMENT/frontend/src/pages/ProjectBoard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport API from \"../utils/api\";\r\nimport \"../styles/board.css\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nfunction ProjectBoard() {\r\n  const { id } = useParams();\r\n  const [project, setProject] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchProject = async () => {\r\n      try {\r\n        const res = await API.get(`/projects/${id}/`);\r\n        setProject(res.data);\r\n        setTasks(res.data.tasks || []);\r\n      } catch (err) {\r\n        console.error(err);\r\n        alert(\"Failed to load project\");\r\n        navigate(\"/\");\r\n      }\r\n    };\r\n    fetchProject();\r\n  }, [id, navigate]);\r\n\r\n  const handleCreateTask = () => {\r\n    navigate(`/project/${id}/create-task`);\r\n  };\r\n\r\n  const handleTaskClick = (taskId) => {\r\n    navigate(`/task/${taskId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />\r\n      <h2>{project?.name}</h2>\r\n      <p>{project?.description}</p>\r\n\r\n      <button onClick={handleCreateTask} className=\"create-btn\">\r\n        + Create Task\r\n      </button>\r\n\r\n      <div className=\"board\">\r\n        {[\"TODO\", \"INPROGRESS\", \"DONE\"].map((statusKey) => (\r\n          <div key={statusKey} className=\"column\">\r\n            <h3>\r\n              {statusKey === \"TODO\"\r\n                ? \"To Do\"\r\n                : statusKey === \"INPROGRESS\"\r\n                ? \"In Progress\"\r\n                : \"Done\"}\r\n            </h3>\r\n            {tasks\r\n              .filter((t) => t.status === statusKey)\r\n              .map((task) => (\r\n                <div\r\n                  key={task.id}\r\n                  className=\"task\"\r\n                  onClick={() => handleTaskClick(task.id)}\r\n                >\r\n                  <strong>{task.title}</strong>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}