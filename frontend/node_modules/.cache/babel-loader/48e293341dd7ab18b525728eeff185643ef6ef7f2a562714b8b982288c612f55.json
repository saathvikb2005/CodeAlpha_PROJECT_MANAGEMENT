{"ast":null,"code":"var _jsxFileName = \"D:\\\\INTERNSHIPS\\\\CODEALPHA\\\\PROJECT_MANAGEMENT\\\\frontend\\\\src\\\\pages\\\\CreateProject.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport API from \"../utils/api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateProject() {\n  _s();\n  const [form, setForm] = useState({\n    name: \"\",\n    description: \"\"\n  });\n  const [emails, setEmails] = useState(\"\"); // comma-separated\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // 1. Create the project\n      await API.post(\"/projects/create/\", form);\n      const projectId = res.data.id;\n\n      // 2. Add members (optional)\n      const emailList = emails.split(\",\").map(e => e.trim()).filter(e => e);\n      for (let email of emailList) {\n        await API.post(`/projects/${projectId}/add-member/`, {\n          email\n        });\n      }\n      alert(\"Project created!\");\n      navigate(`/project/${projectId}`);\n    } catch (err) {\n      alert(\"Failed to create project\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        placeholder: \"Project Name\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Project Description\",\n        onChange: handleChange,\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Add member emails (comma-separated)\",\n        onChange: e => setEmails(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateProject, \"EuGAXk6Vs2G4wfJDlS+lgBlUG2A=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateProject;\nexport default CreateProject;\nvar _c;\n$RefreshReg$(_c, \"CreateProject\");","map":{"version":3,"names":["React","useState","API","useNavigate","jsxDEV","_jsxDEV","CreateProject","_s","form","setForm","name","description","emails","setEmails","navigate","handleChange","e","target","value","handleSubmit","preventDefault","post","projectId","res","data","id","emailList","split","map","trim","filter","email","alert","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","rows","type","_c","$RefreshReg$"],"sources":["D:/INTERNSHIPS/CODEALPHA/PROJECT_MANAGEMENT/frontend/src/pages/CreateProject.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport API from \"../utils/api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction CreateProject() {\r\n  const [form, setForm] = useState({ name: \"\", description: \"\" });\r\n  const [emails, setEmails] = useState(\"\"); // comma-separated\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // 1. Create the project\r\n      await API.post(\"/projects/create/\", form);\r\n\r\n      const projectId = res.data.id;\r\n\r\n      // 2. Add members (optional)\r\n      const emailList = emails.split(\",\").map((e) => e.trim()).filter((e) => e);\r\n      for (let email of emailList) {\r\n        await API.post(`/projects/${projectId}/add-member/`, { email });\r\n      }\r\n\r\n      alert(\"Project created!\");\r\n      navigate(`/project/${projectId}`);\r\n    } catch (err) {\r\n      alert(\"Failed to create project\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Create New Project</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          name=\"name\"\r\n          placeholder=\"Project Name\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <br />\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Project Description\"\r\n          onChange={handleChange}\r\n          rows=\"3\"\r\n        />\r\n        <br />\r\n        <input\r\n          placeholder=\"Add member emails (comma-separated)\"\r\n          onChange={(e) => setEmails(e.target.value)}\r\n        />\r\n        <br />\r\n        <button type=\"submit\">Create Project</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateProject;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}